provider "aws" {
  region = "us-east-1"
}

provider "aws" {
  alias  = "eucentral"
  region = "eu-central-1"
}

resource "aws_vpc" "vpc1" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_vpc" "vpc2" {
  provider   = aws.eucentral
  cidr_block = "10.1.0.0/16"
}

resource "aws_subnet" "public_subnet_vpc1" {
  vpc_id            = aws_vpc.vpc1.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-east-1a"
}

resource "aws_subnet" "public_subnet_vpc2" {
  provider          = aws.eucentral
  vpc_id            = aws_vpc.vpc2.id
  cidr_block        = "10.1.1.0/24"
  availability_zone = "eu-central-1a"
}

resource "aws_security_group" "web_sg" {
  name_prefix = "web-sg"
  vpc_id      = aws_vpc.vpc1.id # Здесь должно быть правильное значение ID для вашей VPC
}

resource "aws_security_group_rule" "web_sg_rule" {
  type        = "ingress"
  from_port   = 80
  to_port     = 80
  protocol    = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
  security_group_id = aws_security_group.web_sg.id
}

resource "aws_instance" "web_instance_vpc1_public" {
  ami           = "ami-0f34c5ae932e6f0e4"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet_vpc1.id
  security_groups = [aws_security_group.web_sg.id]

  user_data = file("user_data_vpc1.sh")
}

resource "aws_instance" "web_instance_vpc2_public" {
  provider      = aws.eucentral
  ami           = "ami-0b2ac948e23c57071"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet_vpc2.id
  security_groups = [aws_security_group.web_sg.id]

  user_data = file("user_data_vpc2.sh")
}

resource "aws_globalaccelerator_accelerator" "example" {
  name = "example"
}

resource "aws_globalaccelerator_listener" "example" {
  accelerator_arn = aws_globalaccelerator_accelerator.example.id
  protocol        = "TCP"

  dynamic "port_range" {
    for_each = [80]
    content {
      from_port = port_range.value
      to_port   = port_range.value
    }
  }
}

resource "aws_globalaccelerator_endpoint_group" "vpc1_group" {
  listener_arn          = aws_globalaccelerator_listener.example.id
  endpoint_group_region = "us-east-1"
  endpoint_configuration {
    endpoint_id = aws_instance.web_instance_vpc1_public.*.private_ip
    weight       = 50
  }
}

resource "aws_globalaccelerator_endpoint_group" "vpc2_group" {
  listener_arn          = aws_globalaccelerator_listener.example.id
  endpoint_group_region = "eu-central-1"
  endpoint_configuration {
    endpoint_id = aws_instance.web_instance_vpc2_public.*.private_ip
    weight       = 50
  }
}




output "global_accelerator_dns_name" {
  value = aws_globalaccelerator_accelerator.example.dns_name
}
