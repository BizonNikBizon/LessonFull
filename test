provider "aws" {
  alias  = "eu_central"
  region = "eu-central-1"
}

provider "aws" {
  alias  = "us_east"
  region = "us-east-1"
}

resource "aws_vpc" "vpc1" {
  provider                = aws.eu_central
  cidr_block              = "10.0.0.0/16"
  enable_dns_support      = true
  enable_dns_hostnames    = true
  tags = {
    Name = "VPC1"
  }
}

resource "aws_subnet" "public_subnet_vpc1" {
  provider                = aws.eu_central
  vpc_id                  = aws_vpc.vpc1.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "eu-central-1a"
  tags = {
    Name = "Public Subnet VPC1"
  }
}

resource "aws_instance" "web_instance_vpc1_public" {
  provider                = aws.eu_central
  ami                     = "ami-0e00e602389e469a3"  # Ubuntu 20.04 LTS
  instance_type           = "t2.micro"
  subnet_id               = aws_subnet.public_subnet_vpc1.id
  vpc_security_group_ids  = [aws_security_group.lb_sg_vpc1.id]
  user_data               = file("user_data_vpc1.sh")
  tags = {
    Name  = "WebInstanceVPC1"
    Owner = "Bizon Nik"
  }
}

resource "aws_security_group" "lb_sg_vpc1" {
  provider                = aws.eu_central
  name_prefix             = "lb_vpc1"
  vpc_id                  = aws_vpc.vpc1.id
}

resource "aws_vpc" "vpc2" {
  provider                = aws.us_east
  cidr_block              = "10.1.0.0/16"
  enable_dns_support      = true
  enable_dns_hostnames    = true
  tags = {
    Name = "VPC2"
  }
}

resource "aws_subnet" "public_subnet_vpc2" {
  provider                = aws.us_east
  vpc_id                  = aws_vpc.vpc2.id
  cidr_block              = "10.1.1.0/24"
  availability_zone       = "us-east-1a"
  tags = {
    Name = "Public Subnet VPC2"
  }
}

resource "aws_instance" "web_instance_vpc2_public" {
  provider                = aws.us_east
  ami                     = "ami-0f34c5ae932e6f0e4"  # Amazon Linux 2
  instance_type           = "t2.micro"
  subnet_id               = aws_subnet.public_subnet_vpc2.id
  vpc_security_group_ids  = [aws_security_group.lb_sg_vpc2.id]
  user_data               = file("user_data_vpc2.sh")
  tags = {
    Name  = "WebInstanceVPC2"
    Owner = "Bizon Nik"
  }
}

resource "aws_security_group" "lb_sg_vpc2" {
  provider                = aws.us_east
  name_prefix             = "lb_vpc2"
  vpc_id                  = aws_vpc.vpc2.id
}

resource "aws_lb" "lb_vpc1" {
  name            = "lb_vpc1"
  load_balancer_type = "application"
  subnets         = [aws_subnet.public_subnet_vpc1.id, aws_subnet.public_subnet_vpc2.id]
}

resource "aws_lb_listener" "listener" {
  load_balancer_arn = aws_lb.lb_vpc1.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type = "forward"
    target_group_arn = aws_lb_target_group.target_group.arn
  }
}

resource "aws_lb_target_group" "target_group" {
  name     = "target-group"
  port     = 80
  protocol = "HTTP"
  vpc_id   = aws_vpc.vpc1.id
}

resource "aws_lb_target_group_attachment" "target_group_attachment_vpc1" {
  target_group_arn = aws_lb_target_group.target_group.arn
  target_id        = aws_instance.web_instance_vpc1_public.id
  port             = 80
}

resource "aws_lb_target_group_attachment" "target_group_attachment_vpc2" {
  target_group_arn = aws_lb_target_group.target_group.arn
  target_id        = aws_instance.web_instance_vpc2_public.id
  port             = 80
}

output "load_balancer_dns_name" {
  value = aws_lb.lb_vpc1.dns_name
}
