provider "aws" {
  alias  = "useast"
  region = "us-east-1"
}

provider "aws" {
  alias  = "eucentral"
  region = "eu-central-1"
}

# VPC in us-east-1 region
resource "aws_vpc" "vpc1" {
  provider        = aws.useast
  cidr_block      = "10.0.0.0/16"
  instance_tenancy = "default"
}

# VPC in eu-central-1 region
resource "aws_vpc" "vpc2" {
  provider        = aws.eucentral
  cidr_block      = "10.1.0.0/16"
  instance_tenancy = "default"
}

# Subnets in us-east-1 region
resource "aws_subnet" "public_subnet_vpc1" {
  provider        = aws.useast
  vpc_id          = aws_vpc.vpc1.id
  cidr_block      = "10.0.1.0/24"
  availability_zone = "us-east-1a"
}

# Subnets in eu-central-1 region
resource "aws_subnet" "public_subnet_vpc2" {
  provider        = aws.eucentral
  vpc_id          = aws_vpc.vpc2.id
  cidr_block      = "10.1.1.0/24"
  availability_zone = "eu-central-1a"
}

# Security Group for instances in VPC1
resource "aws_security_group" "lb_sg_vpc1" {
  provider = aws.useast
  vpc_id   = aws_vpc.vpc1.id

  ingress {
    description = "HTTP from Load Balancer"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    security_groups = [aws_lb.lb_vpc1.security_groups[0]]
  }
}

# Security Group for instances in VPC2
resource "aws_security_group" "lb_sg_vpc2" {
  provider = aws.eucentral
  vpc_id   = aws_vpc.vpc2.id

  ingress {
    description = "HTTP from Load Balancer"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    security_groups = [aws_lb.lb_vpc2.security_groups[0]]
  }
}

# Instances in VPC1
resource "aws_instance" "web_instance_vpc1_public" {
  provider                = aws.useast
  ami                     = "ami-0e00e602389e469a3"
  instance_type           = "t2.micro"
  subnet_id               = aws_subnet.public_subnet_vpc1.id
  vpc_security_group_ids  = [aws_security_group.lb_sg_vpc1.id]
}

# Instances in VPC2
resource "aws_instance" "web_instance_vpc2_public" {
  provider                = aws.eucentral
  ami                     = "ami-0f34c5ae932e6f0e4"
  instance_type           = "t2.micro"
  subnet_id               = aws_subnet.public_subnet_vpc2.id
  vpc_security_group_ids  = [aws_security_group.lb_sg_vpc2.id]
}

# Application Load Balancer in VPC1
resource "aws_lb" "lb_vpc1" {
  provider = aws.useast
  name            = "lb_vpc1"
  load_balancer_type = "application"
  subnets         = [aws_subnet.public_subnet_vpc1.id]
}

# Application Load Balancer in VPC2
resource "aws_lb" "lb_vpc2" {
  provider = aws.eucentral
  name            = "lb_vpc2"
  load_balancer_type = "application"
  subnets         = [aws_subnet.public_subnet_vpc2.id]
}

output "load_balancer_dns_vpc1" {
  value = aws_lb.lb_vpc1.dns_name
}

output "load_balancer_dns_vpc2" {
  value = aws_lb.lb_vpc2.dns_name
}
